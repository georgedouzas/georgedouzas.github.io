{
  "hash": "d701972207c5caf876ad3a6a0f031bf2",
  "result": {
    "markdown": "---\ntitle: MLflow\ndescription: An open source platform for the machine learning lifecycle.\nauthor: Georgios Douzas\ndate: 2023-06-022\ncategories:\n  - Open Source\n  - Review\nimage: featured.png\n---\n\n![](featured.png)\n\n# Introduction\n\n[MLflow](https://mlflow.org/) is an open-source platform designed to manage the entire machine learning lifecycle. It encompasses\nfour main functionalities:\n\n- **Tracking**: Monitors experiments, logging parameters and outcomes.  \n- **Projects**: Enables the packaging of ML code into a reproducible and shareable format.  \n- **Models**: Oversees the management and deployment of models across various ML libraries and serving platforms.  \n- **Model Registry**: Central repository that facilitates collaborative management of MLflow Models throughout their\nlifecycle, including aspects like versioning and stage transitions.\n\nNotably, MLflow is library-agnostic and supports integration with various ML libraries and programming languages through REST API,\nCLI, and additional APIs for Python, R, and Java.\n\n## Tracking\n\nLet's assume we would like to run multiple classification experiments with various classifiers, datasets and random seeds.\n\n::: {.cell execution_count=2}\n``` {.python .cell-code}\nfrom sklearn.datasets import load_breast_cancer, load_iris\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.ensemble import GradientBoostingClassifier\nfrom sklearn.model_selection import GridSearchCV, cross_val_score, KFold, cross_validate\nimport mlflow\n\nrnd_seed = 23\n\ndef run_experiment(clf, param_grid, X, y):\n    cv = KFold(n_splits=3, shuffle=True, random_state=56 * rnd_seed)\n    gscv = GridSearchCV(clf, param_grid=param_grid, cv=cv)\n    results = cross_validate(gscv, X, y, cv=cv, scoring=['accuracy', 'f1_micro'])\n    return results\n\nclfs = [KNeighborsClassifier(), GradientBoostingClassifier()]\nparam_grids = [{'n_neighbors': [3, 5]}, {'max_depth': [3, 5], 'n_estimators': [50, 100], 'random_state': [rnd_seed + 10]}]\ndata = [load_breast_cancer(return_X_y=True), load_iris(return_X_y=True)]\n```\n:::\n\n\n### Manual tracking\n\nWe can manually track the parameters and results of an experiment.\n\n::: {.cell execution_count=3}\n``` {.python .cell-code}\nresults = []\nfor clf, param_grid in zip(clfs, param_grids):\n    for X, y in data:\n        results.append(run_experiment(clf, param_grid, X, y))\n```\n:::\n\n\n### MLflow tracking\n\n::: {.cell execution_count=4}\n``` {.python .cell-code}\nmlflow.autolog()\n\nfor clf, param_grid in zip(clfs, param_grids):\n    for X, y in data:\n        results.append(run_experiment(clf, param_grid, X, y))\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n2023/10/29 10:52:44 WARNING mlflow.utils.autologging_utils: You are using an unsupported version of sklearn. If you encounter errors during autologging, try upgrading / downgrading sklearn to a supported version, or try upgrading MLflow.\n2023/10/29 10:52:44 INFO mlflow.tracking.fluent: Autologging successfully enabled for sklearn.\n2023/10/29 10:52:44 INFO mlflow.utils.autologging_utils: Created MLflow autologging run with ID '77eadc0cb20c4d2aba061954f2ece32a', which will track hyperparameters, performance metrics, model artifacts, and lineage information for the current sklearn workflow\n2023/10/29 10:52:48 WARNING mlflow.utils.autologging_utils: MLflow autologging encountered a warning: \"/Users/georgiosdouzas/Projects/personal/blog/.venv/lib/python3.10/site-packages/_distutils_hack/__init__.py:33: UserWarning: Setuptools is replacing distutils.\"\n2023/10/29 10:52:50 INFO mlflow.sklearn.utils: Logging the 5 best runs, no runs will be omitted.\n2023/10/29 10:52:50 INFO mlflow.utils.autologging_utils: Created MLflow autologging run with ID '3389c86e6bc04d4487e90de20da54f1a', which will track hyperparameters, performance metrics, model artifacts, and lineage information for the current sklearn workflow\n2023/10/29 10:52:56 INFO mlflow.sklearn.utils: Logging the 5 best runs, no runs will be omitted.\n2023/10/29 10:52:56 INFO mlflow.utils.autologging_utils: Created MLflow autologging run with ID 'cad68d24f8f04b70876a7d23ba8ad80c', which will track hyperparameters, performance metrics, model artifacts, and lineage information for the current sklearn workflow\n2023/10/29 10:53:03 INFO mlflow.sklearn.utils: Logging the 5 best runs, no runs will be omitted.\n2023/10/29 10:53:03 INFO mlflow.utils.autologging_utils: Created MLflow autologging run with ID '2189f6bbca8d44618b83ae242514e20c', which will track hyperparameters, performance metrics, model artifacts, and lineage information for the current sklearn workflow\n2023/10/29 10:53:08 INFO mlflow.sklearn.utils: Logging the 5 best runs, no runs will be omitted.\n2023/10/29 10:53:08 INFO mlflow.utils.autologging_utils: Created MLflow autologging run with ID 'd1cf56383e2f4d8aa52fb2297b0aa453', which will track hyperparameters, performance metrics, model artifacts, and lineage information for the current sklearn workflow\n2023/10/29 10:53:14 INFO mlflow.sklearn.utils: Logging the 5 best runs, no runs will be omitted.\n2023/10/29 10:53:14 INFO mlflow.utils.autologging_utils: Created MLflow autologging run with ID '1c8b194f8df8470f9fa2855e69a3ebf5', which will track hyperparameters, performance metrics, model artifacts, and lineage information for the current sklearn workflow\n2023/10/29 10:53:19 INFO mlflow.sklearn.utils: Logging the 5 best runs, no runs will be omitted.\n2023/10/29 10:53:19 INFO mlflow.utils.autologging_utils: Created MLflow autologging run with ID '84d5d55575da4f9e953464acab9b493a', which will track hyperparameters, performance metrics, model artifacts, and lineage information for the current sklearn workflow\n2023/10/29 10:53:28 INFO mlflow.sklearn.utils: Logging the 5 best runs, no runs will be omitted.\n2023/10/29 10:53:28 INFO mlflow.utils.autologging_utils: Created MLflow autologging run with ID '8034811cb6da41a99d5b1c785835e3ea', which will track hyperparameters, performance metrics, model artifacts, and lineage information for the current sklearn workflow\n2023/10/29 10:53:38 INFO mlflow.sklearn.utils: Logging the 5 best runs, no runs will be omitted.\n2023/10/29 10:53:38 INFO mlflow.utils.autologging_utils: Created MLflow autologging run with ID 'd082a11c60fd453d867c5da64a82f6fe', which will track hyperparameters, performance metrics, model artifacts, and lineage information for the current sklearn workflow\n2023/10/29 10:53:47 INFO mlflow.sklearn.utils: Logging the 5 best runs, no runs will be omitted.\n2023/10/29 10:53:47 INFO mlflow.utils.autologging_utils: Created MLflow autologging run with ID 'ea53a501cee143d2a751225096ca3e69', which will track hyperparameters, performance metrics, model artifacts, and lineage information for the current sklearn workflow\n2023/10/29 10:53:56 INFO mlflow.sklearn.utils: Logging the 5 best runs, no runs will be omitted.\n2023/10/29 10:53:56 INFO mlflow.utils.autologging_utils: Created MLflow autologging run with ID 'cd9f4b1babb5417ea6f76605f250485e', which will track hyperparameters, performance metrics, model artifacts, and lineage information for the current sklearn workflow\n2023/10/29 10:54:04 INFO mlflow.sklearn.utils: Logging the 5 best runs, no runs will be omitted.\n2023/10/29 10:54:04 INFO mlflow.utils.autologging_utils: Created MLflow autologging run with ID 'd4efa3104a23441891ba6d2184fb69ee', which will track hyperparameters, performance metrics, model artifacts, and lineage information for the current sklearn workflow\n2023/10/29 10:54:15 INFO mlflow.sklearn.utils: Logging the 5 best runs, no runs will be omitted.\n```\n:::\n:::\n\n\n",
    "supporting": [
      "index_files"
    ],
    "filters": [],
    "includes": {}
  }
}